name: Docker

on:
  push:
    branches:
      - docker
      - ghactions
  # # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onschedule
  # schedule:
  #   - cron:  '0 6 * * 0-4' # every work night at ~ midnight central time
  repository_dispatch:
    types:
      - all
      - docker


jobs:
  docker:
    name: ${{ matrix.config.type }}-${{ matrix.r }}${{ matrix.extra_base_tag }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:

        r:
          # - 3.5
          - 3.6

        shinycoreci_sha:
          # shinycoreci_sha: master
          - shiny-1.4.0.1

        extra_base_tag:
          # extra_base_tag:
          - "-rc_v1.4.0.1"


        config:

        - name: Bionic
          workdir: Docker/ubuntu
          type: bionic

        # - name: Xenial
        #   workdir: Docker/ubuntu
        #   type: xenial

        - name: Centos7
          workdir: Docker/centos
          type: centos7


    steps:
    - uses: actions/checkout@master

    - name: Get apps sha
      shell: bash
      id: apps
      run: |
        SHA=${{ github.event.pull_request.head.sha }}
        if [[ -z "$SHA" ]]; then
          SHA=${{ github.sha }}
        fi
        echo $SHA
        SHORT_SHA=${SHA:0:7}
        echo $SHORT_SHA
        echo "::set-output name=sha::$SHORT_SHA"


    # # https://github.com/marketplace/actions/publish-docker
    # - name: Base
    #   uses: elgohr/Publish-Docker-Github-Action@2.12
    #   with:
    #     name: rstudio/shinycoreci
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    #     cache: ${{ github.event_name != 'schedule' }}
    #     workdir: ${{ matrix.config.workdir }}
    #     buildargs: "R_VERSION=${{ matrix.r }},RELEASE=${{ matrix.config.type }},APPS_SHA=${{ steps.apps.outputs.sha }},SHINYCORECI_SHA=${{ matrix.shinycoreci_sha }},GITHUB_PAT=${{ secrets.GITHUB_PAT }}"
    #     tags: "base-${{ matrix.r }}-${{ matrix.config.type }}${{ matrix.extra_base_tag }}"


    # # https://github.com/marketplace/actions/publish-docker
    # - name: SSO
    #   uses: elgohr/Publish-Docker-Github-Action@2.12
    #   with:
    #     name: rstudio/shinycoreci
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    #     cache: ${{ github.event_name != 'schedule' }}
    #     workdir: ${{ matrix.config.workdir }}_sso
    #     buildargs: "R_VERSION=${{ matrix.r }},RELEASE=${{ matrix.config.type }},EXTRA_BASE_TAG=${{ matrix.extra_base_tag }}"
    #     tags: "sso-${{ matrix.r }}-${{ matrix.config.type }}${{ matrix.extra_base_tag }}"


    - name: SSP License
      shell: bash
      run: |
        printf "%b" "${{ secrets.SSP_LICENSE_FILE }}" > ${{ matrix.config.workdir }}_ssp/ssp.lic 2>/dev/null
        echo ${{ matrix.config.workdir }}_ssp/ssp.lic
        wc -l ${{ matrix.config.workdir }}_ssp/ssp.lic
        ls -d $PWD/${{ matrix.config.workdir }}_ssp/*

    # https://github.com/marketplace/actions/publish-docker
    - name: SSP
      uses: elgohr/Publish-Docker-Github-Action@2.12
      with:
        name: rstudio/shinycoreci
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        cache: ${{ github.event_name != 'schedule' }}
        workdir: ${{ matrix.config.workdir }}_ssp
        # ignoring build arg *_AWS_BUILD_MACHINE as it's consistent within file
        buildargs: "R_VERSION=${{ matrix.r }},RELEASE=${{ matrix.config.type }},SSP_LICENSE_FILE=ssp.lic,EXTRA_BASE_TAG=${{ matrix.extra_base_tag }}"
        tags: "ssp-${{ matrix.r }}-${{ matrix.config.type }}${{ matrix.extra_base_tag }}"
    - name: Remove SSP License
      run: |
        rm ${{ matrix.config.workdir }}_ssp/ssp.lic
